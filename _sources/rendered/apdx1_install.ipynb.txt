{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "toc": true
   },
   "source": [
    "\n",
    "# Getting started\n",
    "\n",
    "We are going to be writing our own programs, which means we need some\n",
    "way to run code that takes in data and produces some kind of output. To\n",
    "keep things simple, most of our code will be run as text files from a\n",
    "command line. Being able to create, rename, delete and change files from\n",
    "the command line is the first skill to master.\n",
    "\n",
    "The bash command shell\n",
    "----------------------\n",
    "\n",
    "Here is first part of a tutorial that introduces the bash shell and what\n",
    "it is used for: <http://swcarpentry.github.io/shell-novice/01-intro/>\n",
    "\n",
    "### 1. Installing the bash shell\n",
    "\n",
    "-   Macs\n",
    "\n",
    "    There are dozens of different flavors of shell. One of these is the\n",
    "    bash shell; if you have a Mac, then you already have a bash shell,\n",
    "    which you can launch from spotlight by typing âŒ˜-space (i.e. press\n",
    "    the \"command\" key together with the a space, then type the word\n",
    "    \"terminal\" into the spotlight search bar).\n",
    "\n",
    "-   For windows, the situation is more complicated. The default windows\n",
    "    shell, which you launch by hitting the windows key\n",
    "\n",
    "    ![image](attachment:screenshots/windows_key.jpeg)\n",
    "\n",
    "    and typing \"cmd\" in the launch window, has a different syntax and is\n",
    "    less capable than bash. I don't want to have to deal with two\n",
    "    shells, so windows users will need to download and install a version\n",
    "    of the bash shell called for windows called MSYS2 from\n",
    "    <https://msys2.github.io/>\n",
    "\n",
    "    Once you've installed it (I'm assuming in the default location\n",
    "    c:msys64, type MSYS in the search bar to get the command to click\n",
    "    and launch a bash shell:\n",
    "\n",
    "    ![image](attachment:screenshots/msys_folders.png)\n",
    "\n",
    "### 2. Working with the shell\n",
    "\n",
    "-   Once you have a shell open, spend 30 minutes to go over\n",
    "    <http://swcarpentry.github.io/shell-novice/02-filedir> (navigating\n",
    "    files and directories),\n",
    "    <http://swcarpentry.github.io/shell-novice/03-create/> (working with\n",
    "    files and directories) and\n",
    "    ttps://swcarpentry.github.io/shell-extras/08-environment-variables.html\n",
    "    (shell variables). Note that directory is just another (older) name\n",
    "    for folder.\n",
    "\n",
    "    -   The commands we will be using frequently are:\n",
    "\n",
    "            pwd     -- print working directory\n",
    "            cd a    -- change to directory a \n",
    "            cd ~    -- change to your home directory\n",
    "            cd ..   -- change to the directory above\n",
    "            ls      -- list files\n",
    "            ls *py  -- list files ending with py\n",
    "            mkdir   -- make a directory\n",
    "            rm      -- remove a file\n",
    "            rm -r   -- remove a directory and all subdirectories\n",
    "            head    -- prints the first 5 lines of a file\n",
    "\n",
    "    These commands will come in handy when we start writing multiple\n",
    "    python scripts in different directories.\n",
    "\n",
    "Installing the atom file editor\n",
    "-------------------------------\n",
    "\n",
    "-   We need to be able to edit configuration files and enter commands to\n",
    "    be run in python. We'll start with a simple standalone editor called\n",
    "    atom: <https://atom.io> which you should download and install.\n",
    "\n",
    "-   If atom has installed correctly you should be able to open a new\n",
    "    bash shell, change to your home directory (for example\n",
    "    /c/users/charles) and open up an empty file called hello\\_world.py,\n",
    "    by typing:\n",
    "\n",
    "        > cd ~   #to change to your home directory -- i.e. /Users/charles (mac) or /home/charles (windows)\n",
    "        > atom hello_world.py\n",
    "\n",
    "-   Type the following line into the atom hello\\_world.py window:\n",
    "\n",
    "        print('hello world')\n",
    "\n",
    "    and save the file as \\~/hello\\_world.py.\n",
    "\n",
    "Installing python\n",
    "-----------------\n",
    "\n",
    "-   We will be using a custom python distribution called miniconda. (See\n",
    "    [this link](http://conda.pydata.org/docs/install/quick.html) for\n",
    "    more on Anaconda and miniconda).\n",
    "\n",
    "    Download python version 3.5 from\n",
    "    <http://conda.pydata.org/miniconda.html> and run the installer. It\n",
    "    will prompt you for a folder to install into.\n",
    "\n",
    "    I recommend that you choose:\n",
    "\n",
    "        c:\\Users\\username\\mini35\n",
    "\n",
    "    on windows and:\n",
    "\n",
    "        /Users/username/mini35\n",
    "\n",
    "    where username is, in my case, charles\n",
    "\n",
    "-   I recommend accepting miniconda python as your official python, but\n",
    "    if you don't want to do that we can work around it later.\n",
    "\n",
    "    ![image](attachment:screenshots/accept_anaconda.png)\n",
    "\n",
    "-   If the python installation is working, then open a msys2 shell and\n",
    "    try the following, which on windows should give something like this:\n",
    "\n",
    "        charles@railwin MSYS ~\n",
    "        $ pwd\n",
    "        /home/charles\n",
    "\n",
    "        charles@railwin MSYS ~\n",
    "        $ ls hello_world.py\n",
    "        hello_world.py\n",
    "\n",
    "        charles@railwin MSYS ~\n",
    "        $ python hello_world.py\n",
    "        hello world\n",
    "\n",
    "Installing python modules\n",
    "-------------------------\n",
    "\n",
    "-   The mini in Miniconda refers to the fact that installing it gives\n",
    "    you only the bare minimum needed to get things done with python. For\n",
    "    our course, we will need additional packages. The package list for\n",
    "    the start of the course is at\n",
    "    <http://clouds.eos.ubc.ca/~phil/courses/atsc301/downloads/a301_module_list.txt>\n",
    "    Save this as a text file (for example in chrome pull down File -\\>\n",
    "    save as) to a directory whose location you know, like\n",
    "    /c/Users/phil/Downloads (on windows). Then from a bash shell, type\n",
    "    the following command to download and install all of these packages:\n",
    "\n",
    "        conda install --file /c/Users/phil/Downloads/a301_module_list.txt\n",
    "\n",
    "Running Python\n",
    "--------------\n",
    "\n",
    "As noted in [How to run python\n",
    "code](./whirlwind/01-How-to-Run-Python-Code.html), we will be using\n",
    "three different methods to run python programs in the course. In\n",
    "addition to running a file from the command line as above with \"python\n",
    "hello\\_world.py\" there are two more interactive approaches:\n",
    "\n",
    "1.  ipython\n",
    "\n",
    "    Start the ipython interpreter in the shell:\n",
    "\n",
    "        $ ipython\n",
    "\n",
    "    At the prompt, type:\n",
    "\n",
    "        print('hello world')\n",
    "\n",
    "    Or you can run the script as a file. At the prompt, type:\n",
    "\n",
    "        run hello_world.py\n",
    "\n",
    "    and it should print \"hello world\".\n",
    "\n",
    "2.  jupyter notebook\n",
    "\n",
    "    The [Whirlwind book](./whirlwind) is written as a series of [jupyter\n",
    "    notebooks](https://nbviewer.jupyter.org/github/jupyter/notebook/blob/master/docs/source/examples/Notebook/Running%20Code.ipynb).\n",
    "    To run individual chapters as notebooks:\n",
    "\n",
    "    1.  Start a bash shell\n",
    "\n",
    "    2.  make a directory to hold the chapters and cd into it:\n",
    "\n",
    "            $ cd ~\n",
    "            $ mkdir whirlwind\n",
    "            $ cd whirlwind\n",
    "\n",
    "    3.  Download a zip file containing the notebooks by clicking on\n",
    "        [this\n",
    "        link](http://clouds.eos.ubc.ca/~phil/courses/atsc301/downloads/WhirlwindTourOfPython-notebooks.zip)\n",
    "\n",
    "    4.  move the zip file into the whirlwind folder. For a stock windows\n",
    "        install, if you type:\n",
    "\n",
    "            $ pwd\n",
    "\n",
    "        and your present working directory is /home/charles/whirlwind,\n",
    "        then on windows that directory would be\n",
    "        c:msys64homecharleswhirlwind and on macs\n",
    "        /Users/charles/whirlwind\n",
    "\n",
    "        ![image](attachment:screenshots/expand_zip.png)\n",
    "\n",
    "    > if this worked then doing an ls in the shell should show you the\n",
    "    > expanded folder:\n",
    "    >\n",
    "    >     $ ls\n",
    "    >     WhirlwindTourOfPython-master\n",
    "\n",
    "    1.  start the jupyter notebook server in the whirlwind directory:\n",
    "\n",
    "            $ jupyter notebook\n",
    "\n",
    "        this should open your default browser and show a single folder\n",
    "        \"WhirlwindTourOfPython-master\". Click on this to list the\n",
    "        notebooks in that folder:\n",
    "\n",
    "        ![image](attachment:screenshots/jupyter_launch.png)\n",
    "\n",
    "    2.  Click on 02-Basic-Python-Syntax.ipynb to launch a notebook\n",
    "        session for that notebook"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "cell_metadata_filter": "all",
   "encoding": "# -*- coding: utf-8 -*-",
   "formats": "ipynb,py:percent",
   "notebook_metadata_filter": "all,-language_info,-toc,-latex_envs"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
